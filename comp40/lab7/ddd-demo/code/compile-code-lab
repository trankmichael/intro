#!/bin/sh
set -e    # halt on first error

link=all  # link all binaries by default
linked=no # track whether we linked

case $1 in  
  -nolink) link=none ; shift ;;  # don't link
  -link)   link="$2" ; shift ; shift ;;  # link only one binary
esac

CFLAGS="-I."
LIBS=

# these flags max out warnings and debug info
FLAGS="-g -O0 -Wall -Wextra -Werror -Wfatal-errors -std=c99 -pedantic"

rm -f *.o  # make sure no object files are left hanging around

case $# in
  0) set *.c ;; # if no args are given, compile all .c files
esac

# compile each argument to a .o file
for cfile 
do
  gcc $FLAGS $CFLAGS -c $cfile
done

# link together .o files + libraries to make executable binaries

if [ -r tul.c ]
then

  case $link in
    all|tuluser) gcc $FLAGS $LFLAGS -o tuluser tuluser.o tul.o $LIBS 
                    linked=yes ;;
  esac

else

  echo "You need to write tul.c before you can build the tuluser program" >&2
  linked=yes

fi

# error if asked to link something we didn't recognize
if [ $linked = no ]; then
  case $link in  # if the -link option makes no sense, complain 
    none) ;; # OK, do nothing
    *) echo "`basename $0`: don't know how to link $link" 1>&2 ; exit 1 ;;
  esac
fi


